{
  "version": 3,
  "sources": ["../src/util.ts"],
  "sourcesContent": ["\r\n\r\n// Utility function to add event listeners to elements\r\nexport function addEventListeners(selector: string, event: string, handler: (e: Event) => void) {\r\n    const elements = document.querySelectorAll(selector);\r\n    elements.forEach(element => {\r\n      element.addEventListener(event, handler);\r\n    });\r\n  }\r\n\r\n  \r\n// Utility Functions\r\nexport function formatAsNumber(n: number | string): string {\r\n    if (Number(n) === 0) return \"-\";\r\n    return String(n);\r\n}\r\n  \r\nexport function formatAsCurrency(n: number | string): string {\r\n    if (Number(n) === 0) return \"-\";\r\n    const formatter = new Intl.NumberFormat('en-NZ', { style: 'currency', currency: 'NZD' });\r\n    return formatter.format(Number(n)) + \" NZD\";\r\n}\r\n\r\nexport function findAncestorWithAttribute(element: HTMLElement, attributeName: string): HTMLElement | null {\r\n    let currentElement: HTMLElement | null = element;\r\n\r\n    while (currentElement) {\r\n        if (currentElement.hasAttribute(attributeName)) {\r\n            return currentElement;\r\n        }\r\n        currentElement = currentElement.parentElement;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getAncestorAttributeValue(element: HTMLElement, attributeName: string): string | null {\r\n    let currentElement: HTMLElement | null = element;\r\n\r\n    while (currentElement) {\r\n        if (currentElement.hasAttribute(attributeName)) {\r\n            return currentElement.getAttribute(attributeName);\r\n        }\r\n        currentElement = currentElement.parentElement;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function hasAncestorWithAttribute(element: HTMLElement, attributeName: string): boolean {\r\n    return findAncestorWithAttribute(element, attributeName) !== null;\r\n}\r\n\r\nexport function convertToPixels(value: string, contextElement: HTMLElement = document.documentElement): number {\r\n    // Parse the numeric value and unit, including negative values\r\n    const match = value.match(/^(-?\\d+\\.?\\d*)(rem|em|px|vh|vw|%)$/);\r\n    if (!match) throw new Error('Invalid value format');\r\n\r\n    const [, amountStr, unit] = match;\r\n    const amount = parseFloat(amountStr);\r\n\r\n    // Convert based on the unit\r\n    switch (unit) {\r\n        case 'px':\r\n            return amount;\r\n        case 'rem':\r\n            return amount * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n        case 'em':\r\n            // For 'em', it's relative to the font-size of the context element.\r\n            return amount * parseFloat(getComputedStyle(contextElement).fontSize);\r\n        case 'vh':\r\n            return amount * window.innerHeight / 100;\r\n        case 'vw':\r\n            return amount * window.innerWidth / 100;\r\n        case '%':\r\n            // For %, it's relative to the parent element's size. This can be tricky as it depends on the property (width, height, font-size, etc.).\r\n            // In this example, we'll use it relative to the width of the context element, but you might need to adjust based on your specific use case.\r\n            return amount * contextElement.clientWidth / 100;\r\n        default:\r\n            throw new Error('Unsupported unit');\r\n    }\r\n}\r\n\r\n\r\n/*\r\n// Example usage:\r\nconst pixelValue = convertToPixels(\"10vh\");\r\nconsole.log(pixelValue);\r\n*/\r\n\r\n"],
  "mappings": ";;;AAGO,WAAS,kBAAkB,UAAkB,OAAe,SAA6B;AAC5F,UAAM,WAAW,SAAS,iBAAiB,QAAQ;AACnD,aAAS,QAAQ,aAAW;AAC1B,cAAQ,iBAAiB,OAAO,OAAO;AAAA,IACzC,CAAC;AAAA,EACH;AAIK,WAAS,eAAe,GAA4B;AACvD,QAAI,OAAO,CAAC,MAAM;AAAG,aAAO;AAC5B,WAAO,OAAO,CAAC;AAAA,EACnB;AAEO,WAAS,iBAAiB,GAA4B;AACzD,QAAI,OAAO,CAAC,MAAM;AAAG,aAAO;AAC5B,UAAM,YAAY,IAAI,KAAK,aAAa,SAAS,EAAE,OAAO,YAAY,UAAU,MAAM,CAAC;AACvF,WAAO,UAAU,OAAO,OAAO,CAAC,CAAC,IAAI;AAAA,EACzC;AAEO,WAAS,0BAA0B,SAAsB,eAA2C;AACvG,QAAI,iBAAqC;AAEzC,WAAO,gBAAgB;AACnB,UAAI,eAAe,aAAa,aAAa,GAAG;AAC5C,eAAO;AAAA,MACX;AACA,uBAAiB,eAAe;AAAA,IACpC;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,0BAA0B,SAAsB,eAAsC;AAClG,QAAI,iBAAqC;AAEzC,WAAO,gBAAgB;AACnB,UAAI,eAAe,aAAa,aAAa,GAAG;AAC5C,eAAO,eAAe,aAAa,aAAa;AAAA,MACpD;AACA,uBAAiB,eAAe;AAAA,IACpC;AAEA,WAAO;AAAA,EACX;AAEO,WAAS,yBAAyB,SAAsB,eAAgC;AAC3F,WAAO,0BAA0B,SAAS,aAAa,MAAM;AAAA,EACjE;AAEO,WAAS,gBAAgB,OAAe,iBAA8B,SAAS,iBAAyB;AAE3G,UAAM,QAAQ,MAAM,MAAM,oCAAoC;AAC9D,QAAI,CAAC;AAAO,YAAM,IAAI,MAAM,sBAAsB;AAElD,UAAM,CAAC,EAAE,WAAW,IAAI,IAAI;AAC5B,UAAM,SAAS,WAAW,SAAS;AAGnC,YAAQ,MAAM;AAAA,MACV,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO,SAAS,WAAW,iBAAiB,SAAS,eAAe,EAAE,QAAQ;AAAA,MAClF,KAAK;AAED,eAAO,SAAS,WAAW,iBAAiB,cAAc,EAAE,QAAQ;AAAA,MACxE,KAAK;AACD,eAAO,SAAS,OAAO,cAAc;AAAA,MACzC,KAAK;AACD,eAAO,SAAS,OAAO,aAAa;AAAA,MACxC,KAAK;AAGD,eAAO,SAAS,eAAe,cAAc;AAAA,MACjD;AACI,cAAM,IAAI,MAAM,kBAAkB;AAAA,IAC1C;AAAA,EACJ;",
  "names": []
}
