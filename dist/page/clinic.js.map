{
  "version": 3,
  "sources": ["../../src/page/clinic.ts"],
  "sourcesContent": ["\n/*\n * SITE \n * Page | Clinic \n * \n */\n\n// import { TocFix } from \"../tocfix\";\n// import Plyr from 'plyr';\n// // import QRCode from 'qrcode';\n// import { AdjustTrackingUrl } from \"../adjust\";\n// import { AdjustTrackingQr } from \"../adjust-qr\";\nimport { IRouteHandler, Page } from \"@sygnal/sse\";\n\n//const url: string = 'https://www.sygnal.com?thisisatrackingurlthsfdsfsdsdatdoesstuff';\n\n\nexport class ClinicPage implements IRouteHandler {\n\n    constructor() {\n    }\n\n    setup() {\n        \n    }\n    \n    exec() {\n\n        /**\n         * Fix links for the ToC \n         */\n\n        // let tocFix = new TocFix();\n        // tocFix.init(); \n\n//         window['fsAttributes'] = window['fsAttributes'] || [];\n//         window['fsAttributes'].push([\n//           'toc',\n//           (tableInstances) => {\n\n//             tocFix.addToCCloseLinks();\n\n// //            console.log('toc Successfully loaded!');\n//           },\n//         ]);\n\n//         /**\n//          * Wire up components embedded\n//          * in Finsweet PRT RTB's\n//          */\n\n//         window['fsAttributes'] = window['fsAttributes'] || []; \n//         window['fsAttributes'].push([  \n//           'richtext',   \n//           (textInstances) => {   \n\n//             this.initAfterFsPRTLib();\n// //            console.log('richtext Successfully loaded!');      \n//           },   \n//         ]);    \n\n\n        // // Look for all links with a [code] attribute\n        // // and apply it to the link's querystring as ?code=VALUE. \n\n        // // Get all links with the 'code' attribute\n        // const links: NodeListOf<HTMLAnchorElement> = document.querySelectorAll('a[code]');\n\n        // links.forEach((link: HTMLAnchorElement) => {\n        //     // Get the value of the 'code' attribute\n        //     const codeValue: string = link.getAttribute('code') || '';\n\n        //     // Use the URL interface to handle the href\n        //     const url: URL = new URL(link.href);\n            \n        //     // Use URLSearchParams to set the code parameter\n        //     url.searchParams.set('code', codeValue);\n\n        //     // Update the link href\n        //     link.href = url.toString();\n        // });\n                    \n    }\n\n}  \n\n    \n    \n    \n    "],
  "mappings": ";;;AAiBO,MAAM,aAAN,MAA0C;AAAA,IAE7C,cAAc;AAAA,IACd;AAAA,IAEA,QAAQ;AAAA,IAER;AAAA,IAEA,OAAO;AAAA,IAwDP;AAAA,EAEJ;",
  "names": []
}
